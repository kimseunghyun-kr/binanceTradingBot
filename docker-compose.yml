# File: docker-compose.yml
version: "3.8"
services:
  app:
    build: .
    container_name: tradingbot_app
    restart: unless-stopped
    env_file:
      - .env                # Contains API keys and DB URIs
    environment:
      # Ensuring the app knows it runs in docker with these hosts:
      MONGO_URI: "mongodb://mongo:27017/trading"
      POSTGRES_DSN: "postgresql://postgres:postgres@postgres:5432/trading"
      REDIS_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      # (Optionally, BINANCE_API_KEY, BINANCE_API_SECRET, COINMARKETCAP_API_KEY can be in .env)
    ports:
      - "8000:8000"         # FastAPI served via Uvicorn
    depends_on:
      - mongo
      - redis
      - postgres

  worker:
    build: .
    container_name: tradingbot_worker
    restart: unless-stopped
    command: [ "python", "worker.py" ]   # Start Celery worker
    env_file:
      - .env
    environment:
      MONGO_URI: "mongodb://mongo:27017/trading"
      POSTGRES_DSN: "postgresql://postgres:postgres@postgres:5432/trading"
      REDIS_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
    depends_on:
      - mongo
      - redis
      - postgres

  redis:
    image: redis:6-alpine
    container_name: tradingbot_redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  mongo:
    image: mongo:4.4
    container_name: tradingbot_mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  postgres:
    image: postgres:13-alpine
    container_name: tradingbot_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "trading"
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  nginx:
    image: nginx:alpine
    container_name: tradingbot_nginx
    depends_on:
      - app
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      -
  orchestrator:
    build:
      context: ./orchestrator
    container_name: tradingbot_orchestrator
    restart: unless-stopped
    environment:
      MONGO_URI: "mongodb://mongo:27017/trading"
      MONGO_DB: "trading"
    depends_on:
      - mongo
volumes:
  mongo_data:
  pg_data:


